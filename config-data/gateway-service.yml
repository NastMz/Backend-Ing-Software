server:
  port: 8080
  error:
    include-stacktrace: never
    include-message: always
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    hostname: localhost

spring:
  application:
    zipkin: http://localhost:9411
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          "[/**]":
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/save
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/check/**
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/restore
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/**
          filters:
            - AuthFilter
        - id: role-service
          uri: lb://role-service
          predicates:
            - Path=/api/role/**
          filters:
            - AuthFilter
        - id: auth-jwt-service
          uri: lb://auth-jwt-service
          predicates:
            - Path=/oauth/**
        - id: city-service
          uri: lb://city-service
          predicates:
            - Path=/api/city/**
          filters:
            - AuthFilter
        - id: shoes-service
          uri: lb://shoes-service
          predicates:
            - Path=/api/shoes/list
        - id: shoes-service
          uri: lb://shoes-service
          predicates:
            - Path=/api/shoes/detail/**
        - id: shoes-service
          uri: lb://shoes-service
          predicates:
            - Path=/api/shoes/**
          filters:
            - AuthFilter
        - id: category-service
          uri: lb://category-service
          predicates:
            - Path=/api/category/**
          filters:
            - AuthFilter
        - id: buy-service
          uri: lb://buy-service
          predicates:
            - Path=/api/buy/**
          filters:
            - AuthFilter
        - id: question-service
          uri: lb://question-service
          predicates:
            - Path=/api/question/list
        - id: question-service
          uri: lb://question-service
          predicates:
            - Path=/api/question/**
          filters:
            - AuthFilter
        - id: supplier-service
          uri: lb://supplier-service
          predicates:
            - Path=/api/supplier/**
          filters:
            - AuthFilter
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order/**
          filters:
            - AuthFilter
        - id: status-service
          uri: lb://status-service
          predicates:
            - Path=/api/status/**
          filters:
            - AuthFilter
        - id: shoesbought-service
          uri: lb://shoesbought-service
          predicates:
            - Path=/api/shoesbought/**
          filters:
            - AuthFilter
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payment/**
          filters:
            - AuthFilter
